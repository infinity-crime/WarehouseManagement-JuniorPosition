@page "{id}"
@model WarehouseManagement.Web.Pages.Warehouse.FormModel
@{
    ViewData["Title"] = Model.IsNewReceipt ? "Новое поступление" : "Поступление";
}

<div class="page-title">
    @if (!Model.IsNewReceipt)
    {
        <div class="button-group">
            <button type="submit" form="document-form" class="btn btn-primary">Сохранить</button>
            <button type="submit" form="delete-form" class="btn btn-danger">Удалить</button>
        </div>
    }
    else
    {
        <div class="button-group">
            <button type="submit" form="document-form" class="btn btn-primary">Сохранить</button>
        </div>
    }
</div>

<form id="document-form" method="post" asp-page-handler="Save">
    <input type="hidden" asp-for="Command.Id" />
    
    <div class="document-header">
        <div class="form-group">
            <label>Номер</label>
            <input asp-for="Command.Number" class="form-control" required />
        </div>
        
        <div class="form-group">
            <label>Дата</label>
            <input asp-for="Command.Date" type="date" class="form-control" required 
                   value="@(Model.Command.Date == default ? "" : Model.Command.Date.ToString("yyyy-MM-dd"))" />
        </div>
    </div>
    
    <div class="resources-section">
        <h3>Ресурсы</h3>
        
        <table class="resources-table">
            <thead>
                <tr>
                    <th></th>
                    <th>Ресурс</th>
                    <th>Единица измерения</th>
                    <th>Количество</th>
                </tr>
            </thead>
            <tbody id="resources-body">
                @if (Model.Command.Resources != null)
                {
                    @for (var i = 0; i < Model.Command.Resources.Count; i++)
                    {
                        <tr>
                            <td>
                                <button type="button" class="btn-remove-resource" data-index="@i">×</button>
                            </td>
                            <td>
                                <select asp-for="Command.Resources[i].ResourceId" 
                                        asp-items="Model.ResourceOptions" 
                                        class="form-control resource-select">
                                    <option value="">Выберите ресурс</option>
                                </select>
                            </td>
                            <td>
                                <select asp-for="Command.Resources[i].UnitId" 
                                        asp-items="Model.UnitOptions" 
                                        class="form-control unit-select">
                                    <option value="">Выберите единицу</option>
                                </select>
                            </td>
                            <td>
                                <input asp-for="Command.Resources[i].Amount" 
                                       type="number" 
                                       step="0.01" 
                                       class="form-control amount-input" 
                                       required />
                            </td>
                        </tr>
                    }
                }
                
                <!-- Пустая строка по умолчанию -->
                @if (Model.Command.Resources == null || !Model.Command.Resources.Any())
                {
                    <tr id="empty-row">
                        <td colspan="4" class="text-center">
                            Нет ресурсов. Нажмите "Добавить ресурс"
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        
        <button type="button" id="add-resource" class="btn btn-secondary">Добавить ресурс</button>
    </div>
</form>

@if (!Model.IsNewReceipt)
{
    <form id="delete-form" method="post" asp-page-handler="Delete">
        <input type="hidden" asp-for="Command.Id" />
    </form>
}

@section Scripts {
    <script>
        // 1. Сохраняем данные с сервера в переменные JS при загрузке страницы
        const resourceOptions = @Json.Serialize(Model.ResourceOptions);
        const unitOptions = @Json.Serialize(Model.UnitOptions);

        document.addEventListener('DOMContentLoaded', function() {
            // Функция генерации опций для select (она у вас уже есть и она правильная)
            function getOptionsHtml(options, selectedValue) {
                let html = '<option value="">Выберите...</option>'; // Добавим пустую опцию
                html += options.map(opt =>
                    `<option value="${opt.value}" ${opt.value === selectedValue ? 'selected' : ''}>${opt.text}</option>`
                ).join('');
                return html;
            }

            // 2. Используем переменные в обработчике клика
            document.getElementById('add-resource').addEventListener('click', function() {
                const tableBody = document.getElementById('resources-body');
                const newIndex = tableBody.querySelectorAll('tr:not(#empty-row)').length;

                const emptyRow = document.getElementById('empty-row');
                if (emptyRow) emptyRow.remove();

                const newRow = document.createElement('tr');
                // 3. Строим HTML с помощью JS-переменных
                newRow.innerHTML = `
                    <td>
                        <button type="button" class="btn-remove-resource" data-index="${newIndex}">×</button>
                    </td>
                    <td>
                        <select name="Command.Resources[${newIndex}].ResourceId" class="form-control resource-select" required>
                            ${getOptionsHtml(resourceOptions, '')}
                        </select>
                    </td>
                    <td>
                        <select name="Command.Resources[${newIndex}].UnitId" class="form-control unit-select" required>
                            ${getOptionsHtml(unitOptions, '')}
                        </select>
                    </td>
                    <td>
                        <input name="Command.Resources[${newIndex}].Amount"
                               type="number" step="0.01" class="form-control amount-input" required />
                    </td>
                `;

                tableBody.appendChild(newRow);
                initRemoveButtons(); // Эта функция у вас уже есть
            });

            // ... остальной ваш код (initRemoveButtons) ...
            function initRemoveButtons() {
                // Ваш код для удаления строк и переиндексации
            }
            initRemoveButtons();
        });
    </script>
}